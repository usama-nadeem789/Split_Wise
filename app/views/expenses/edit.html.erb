<script>
  let userCount = 0;
  function addNewUser(amountPayedByUser,emailOfUserPayed) {
    const newUserDiv = document.getElementById('new-user-fields-div');
    const userEmail = `users_attributes[${userCount}][email]`;
    const userAmount = `users_attributes[${userCount}][amount_paid_by_user]`;

    const inputField = document.createElement('div');
    inputField.innerHTML = `
      <label for="${userEmail}">User Email:</label>
      <input type="email" name="${userEmail}" id="${userEmail}" readonly value="${emailOfUserPayed}">
      <label for="${userAmount}">Amount Paid by this User:</label>
      <input type="text" name="${userAmount}" id="${userAmount}" value="${amountPayedByUser}">
    `;

    newUserDiv.appendChild(inputField);
    userCount++;
  }
</script>

<h1>Edit Expense</h1>

<% if @expense.errors.any? %>
  <div>
    <h2>Errors : </h2>
    <% @expense.errors.full_messages.each do |message| %>
      <li><%= message %></li>
    <% end %>
    <br>
  </div>
<% end %>

<%= form_with(model: @expense, url: expense_path(@expense), method: :patch) do |form| %>
  <div>
    <%= form.label :description %>
    <%= form.text_field :description%>
  </div>
  <div>
    <%= form.label :total_amount %>
    <%= form.text_field :total_amount %>
  </div>

  <br>
  <h3> Amount paid by Users </h3>
  <div id="new-user-fields-div"></div>

  <% @amount_paid_by_current_loggedin_user%>

  <% @expense_users.each do |expense_user| %>
    <% if expense_user.user_id == current_user.id%>
      <% @amount_paid_by_current_loggedin_user = expense_user.amount_paid_by_user%>
    <% else %>
      <script>
        <% fetched_user = User.find(expense_user.user_id)%>
        addNewUser('<%= expense_user.amount_paid_by_user %>','<%= fetched_user.email %>');
      </script>
    <% end %>
  <% end %>

  <br>
  <div>
    <%= form.label :amount_paid_by_current_user, "Amount Paid By You" %>
    <%= form.text_field :amount_paid_by_current_user, value: @amount_paid_by_current_loggedin_user%>
  </div>
  <br>
  <div>  
    <%= form.submit 'Update Expense', onclick: 'return validateTotalAmount()'%>
  </div>
  <%= link_to "Cancel", expense_path(@expense)%>
<% end %>


<script>

  function validateTotalAmount() {
    let totalAmountPaidByUsers = 0;

    let totalAmount = document.getElementById('expense_total_amount').value;
    let amountPaidByCurrentUser = document.getElementById('expense_amount_paid_by_current_user').value;

    if (isNaN(totalAmount)){
      alert('Entered total amount is not a number');
      return false;
    }
    else if (totalAmount == '') {
      alert('Total amount cannot be empty');
      return false;
    }
    else if (parseInt(totalAmount) <= 0) {
      alert('Total amount must be greater than 0');
      return false;
    }
    else {
      totalAmount = parseInt(totalAmount);
    }

    if (isNaN(amountPaidByCurrentUser)){
      alert('Entered amount is not a number for your payment');
      return false;
    }
    else if (amountPaidByCurrentUser == '') {
      amountPaidByCurrentUser = 0;
    }
    else if (parseInt(amountPaidByCurrentUser) < 0) {
      alert('Enter amount greater than or equal to 0 for your payment');
      return false;
    }
    else {
      totalAmountPaidByUsers += parseInt(amountPaidByCurrentUser);
    }

    for (let i = 0; i < userCount; i++) {
      let amountPayedByUser = document.getElementById(`users_attributes[${i}][amount_paid_by_user]`).value;

      if (isNaN(amountPayedByUser)){
        alert('Entered amount for user is not a number');
        return false;
      }
      else if (amountPayedByUser == "") {
        amountPayedByUser = 0;
      }
      else if (parseInt(amountPayedByUser) < 0) {
        alert('Enter amount greater than or equal to 0 for users');
        return false;
      }
      else {
        totalAmountPaidByUsers += parseInt(amountPayedByUser);
      }
    }

    if (totalAmount !== totalAmountPaidByUsers) {
      alert('The total amount and amount paid by users do not match');
      return false;
    }

    return true;
  }
</script>

